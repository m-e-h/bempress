///*------------------------------------*\
//    #FUNCTIONS
//\*------------------------------------*/

// Maths helpers.
//
// Halve and double numbers, returning rounded integers. E.g.:
//
// .foo {
//     padding: halve(3.2px);
// }
//
@function quarter($number) {
    @return round($number / 4);
}

@function halve($number) {
    @return round($number / 2);
}

@function double($number) {
    @return round($number * 2);
}

@function quadruple($number) {
    @return round($number * 4);
}



// Determines text color based on bg color
//
// .button {
//   background: $sample-color;
//   color: set-text-color($sample-color);
// }
//
@function set-text-color($color) {
  @if (lightness($color) > 51) {
    @return rgba($color-text, .95); // Lighter backgorund, return dark color
  } @else {
    @return rgba(#ffffff, .95); // Darker background, return light color
  }
}

// Determines text color based on bg color
//
// .button {
//   background: $sample-color;
//   color: set-text-color($sample-color);
// }
//
@function glass($color) {
    @return rgba($color, .8);
}


// A function helper to avoid having to type `map-get($z-layers, ...)`
// ---
// @param [string] $component: the layer to use
// ---
// @return [number] | [null]

@function z($layer) {
  @if not map-has-key($z-layers, $layer) {
    @warn "No z-index found in $z-layers map for `#{$layer}`. Property omitted.";
  }

  @return map-get($z-layers, $layer);
}
